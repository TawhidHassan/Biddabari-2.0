// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'Exam.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

Exam _$ExamFromJson(Map<String, dynamic> json) => Exam(
      (json['id'] as num?)?.toInt(),
      (json['course_section_id'] as num?)?.toInt(),
      json['parent_id'],
      json['content_type'] as String?,
      json['title'] as String?,
      json['exam_mode'] as String?,
      (json['exam_duration_in_minutes'] as num?)?.toInt(),
      (json['class_xm_duration_in_minutes'] as num?)?.toInt(),
      json['exam_total_questions'] as String?,
      (json['exam_per_question_mark'] as num?)?.toInt(),
      (json['exam_negative_mark'] as num?)?.toDouble(),
      (json['exam_pass_mark'] as num?)?.toInt(),
      (json['exam_is_strict'] as num?)?.toInt(),
      json['exam_start_time'] as String?,
      json['exam_start_time_timestamp'] as String?,
      json['exam_end_time'] as String?,
      json['exam_end_time_timestamp'] as String?,
      json['exam_result_publish_time'],
      json['exam_result_publish_time_timestamp'] as String?,
      json['exam_total_subject'],
      json['written_exam_duration_in_minutes'] as String?,
      json['written_total_questions'],
      json['written_description'],
      json['written_is_strict'],
      json['written_start_time'],
      json['written_start_time_timestamp'],
      json['written_end_time'],
      json['written_end_time_timestamp'],
      json['written_publish_time'],
      json['written_publish_time_timestamp'],
      json['written_total_subject'],
      (json['is_paid'] as num?)?.toInt(),
      (json['has_class_xm'] as num?)?.toInt(),
      json['course_section_content_id'],
      json['status'],
      json['totalPdf'] as num?,
      json['totalExam'] as num?,
      json['description'] as String?,
      json['purchase_status'] as String?,
      json['is_master_exam'] as num?,
      (json['user_id'] as num?)?.toInt(),
      json['xm_type'] as String?,
      json['written_xm_file'],
      json['provided_ans'] as String?,
      json['banner'] as String?,
      json['result_mark'] as num?,
      (json['is_reviewed'] as num?)?.toInt(),
      (json['required_time'] as num?)?.toInt(),
      json['created_at'] == null
          ? null
          : DateTime.parse(json['created_at'] as String),
      json['updated_at'] == null
          ? null
          : DateTime.parse(json['updated_at'] as String),
      json['user'] == null
          ? null
          : User.fromJson(json['user'] as Map<String, dynamic>),
      json['course_section_content'] == null
          ? null
          : CourseSectionContent.fromJson(
              json['course_section_content'] as Map<String, dynamic>),
      (json['question_stores'] as List<dynamic>?)
          ?.map((e) => Question.fromJson(e as Map<String, dynamic>))
          .toList(),
      (json['question_stores_for_class_xm'] as List<dynamic>?)
          ?.map((e) => Question.fromJson(e as Map<String, dynamic>))
          .toList(),
      (json['batch_exam_subscriptions'] as List<dynamic>?)
          ?.map((e) => Exam.fromJson(e as Map<String, dynamic>))
          .toList(),
      (json['batch_exam_id'] as num?)?.toInt(),
      json['price'],
      (json['package_duration_in_days'] as num?)?.toInt(),
      json['package_title'] as String?,
      json['discount_amount'],
      json['discount_start_date'] as String?,
      json['discount_end_date'] as String?,
      json['total_right_ans'] as num?,
      json['total_wrong_ans'] as num?,
      json['total_provided_ans'] as num?,
    );

Map<String, dynamic> _$ExamToJson(Exam instance) => <String, dynamic>{
      'id': instance.id,
      'course_section_id': instance.courseSectionId,
      'parent_id': instance.parentId,
      'content_type': instance.contentType,
      'title': instance.title,
      'exam_mode': instance.examMode,
      'exam_duration_in_minutes': instance.examDurationInMinutes,
      'class_xm_duration_in_minutes': instance.classExamDurationInMinutes,
      'exam_total_questions': instance.examTotalQuestions,
      'exam_per_question_mark': instance.examPerQuestionMark,
      'exam_negative_mark': instance.examNegativeMark,
      'exam_pass_mark': instance.examPassMark,
      'exam_is_strict': instance.examIsStrict,
      'exam_start_time': instance.examStartTime,
      'exam_start_time_timestamp': instance.examStartTimeTimestamp,
      'exam_end_time': instance.examEndTime,
      'exam_end_time_timestamp': instance.examEndTimeTimestamp,
      'exam_result_publish_time': instance.examResultPublishTime,
      'exam_result_publish_time_timestamp':
          instance.examResultPublishTimeTimestamp,
      'exam_total_subject': instance.examTotalSubject,
      'written_exam_duration_in_minutes': instance.writtenExamDurationInMinutes,
      'written_total_questions': instance.writtenTotalQuestions,
      'written_description': instance.writtenDescription,
      'written_is_strict': instance.writtenIsStrict,
      'written_start_time': instance.writtenStartTime,
      'written_start_time_timestamp': instance.writtenStartTimeTimestamp,
      'written_end_time': instance.writtenEndTime,
      'written_end_time_timestamp': instance.writtenEndTimeTimestamp,
      'written_publish_time': instance.writtenPublishTime,
      'written_publish_time_timestamp': instance.writtenPublishTimeTimestamp,
      'written_total_subject': instance.writtenTotalSubject,
      'is_paid': instance.isPaid,
      'has_class_xm': instance.hasClassXm,
      'course_section_content_id': instance.courseSectionContentId,
      'status': instance.status,
      'totalPdf': instance.totalPdf,
      'totalExam': instance.totalExam,
      'description': instance.description,
      'purchase_status': instance.purchase_status,
      'is_master_exam': instance.is_master_exam,
      'user_id': instance.userId,
      'xm_type': instance.xmType,
      'written_xm_file': instance.writtenXmFile,
      'provided_ans': instance.providedAns,
      'banner': instance.banner,
      'result_mark': instance.resultMark,
      'is_reviewed': instance.isReviewed,
      'required_time': instance.requiredTime,
      'created_at': instance.createdAt?.toIso8601String(),
      'updated_at': instance.updatedAt?.toIso8601String(),
      'user': instance.user,
      'course_section_content': instance.courseSectionContent,
      'question_stores': instance.questionStores,
      'question_stores_for_class_xm': instance.questionStoresClassExam,
      'batch_exam_subscriptions': instance.batchExamSubscriptions,
      'batch_exam_id': instance.batchExamId,
      'price': instance.price,
      'package_duration_in_days': instance.packageDurationInDays,
      'package_title': instance.packageTitle,
      'discount_amount': instance.discountAmount,
      'discount_start_date': instance.discountStartDate,
      'discount_end_date': instance.discountEndDate,
      'total_right_ans': instance.total_right_ans,
      'total_wrong_ans': instance.total_wrong_ans,
      'total_provided_ans': instance.total_provided_ans,
    };
